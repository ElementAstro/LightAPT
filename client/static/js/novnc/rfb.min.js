import{toUnsigned32bit,toSigned32bit}from"./util/int.min.js";import*as Log from"./util/logging.min.js";import{encodeUTF8,decodeUTF8}from"./util/strings.min.js";import{dragThreshold}from"./util/browser.min.js";import{clientToElement}from"./util/element.min.js";import{setCapture}from"./util/events.min.js";import EventTargetMixin from"./util/eventtarget.min.js";import Display from"./display.min.js";import Inflator from"./inflator.min.js";import Deflator from"./deflator.min.js";import Keyboard from"./input/keyboard.min.js";import GestureHandler from"./input/gesturehandler.min.js";import Cursor from"./util/cursor.min.js";import Websock from"./websock.min.js";import DES from"./des.min.js";import KeyTable from"./input/keysym.min.js";import XtScancode from"./input/xtscancodes.min.js";import{encodings}from"./encodings.min.js";import RSAAESAuthenticationState from"./ra2.min.js";import{MD5}from"./util/md5.min.js";import RawDecoder from"./decoders/raw.min.js";import CopyRectDecoder from"./decoders/copyrect.min.js";import RREDecoder from"./decoders/rre.min.js";import HextileDecoder from"./decoders/hextile.min.js";import TightDecoder from"./decoders/tight.min.js";import TightPNGDecoder from"./decoders/tightpng.min.js";import ZRLEDecoder from"./decoders/zrle.min.js";import JPEGDecoder from"./decoders/jpeg.min.js";const DISCONNECT_TIMEOUT=3,DEFAULT_BACKGROUND="rgb(40, 40, 40)",MOUSE_MOVE_DELAY=17,WHEEL_STEP=50,WHEEL_LINE_HEIGHT=19,GESTURE_ZOOMSENS=75,GESTURE_SCRLSENS=50,DOUBLE_TAP_TIMEOUT=1e3,DOUBLE_TAP_THRESHOLD=50,securityTypeNone=1,securityTypeVNCAuth=2,securityTypeRA2ne=6,securityTypeTight=16,securityTypeVeNCrypt=19,securityTypeXVP=22,securityTypeARD=30,securityTypeMSLogonII=113,securityTypeUnixLogon=129,securityTypePlain=256,extendedClipboardFormatText=1,extendedClipboardFormatRtf=2,extendedClipboardFormatHtml=4,extendedClipboardFormatDib=8,extendedClipboardFormatFiles=16,extendedClipboardActionCaps=1<<24,extendedClipboardActionRequest=1<<25,extendedClipboardActionPeek=1<<26,extendedClipboardActionNotify=1<<27,extendedClipboardActionProvide=1<<28;export default class RFB extends EventTargetMixin{constructor(target,urlOrChannel,options){if(!target)throw new Error("Must specify target");if(!urlOrChannel)throw new Error("Must specify URL, WebSocket or RTCDataChannel");window.isSecureContext||Log.Error("noVNC requires a secure context (TLS). Expect crashes!"),super(),this._target=target,"string"==typeof urlOrChannel?this._url=urlOrChannel:(this._url=null,this._rawChannel=urlOrChannel),options=options||{},this._rfbCredentials=options.credentials||{},this._shared=!("shared"in options)||!!options.shared,this._repeaterID=options.repeaterID||"",this._wsProtocols=options.wsProtocols||[],this._rfbConnectionState="",this._rfbInitState="",this._rfbAuthScheme=-1,this._rfbCleanDisconnect=!0,this._rfbRSAAESAuthenticationState=null,this._rfbVersion=0,this._rfbMaxVersion=3.8,this._rfbTightVNC=!1,this._rfbVeNCryptState=0,this._rfbXvpVer=0,this._fbWidth=0,this._fbHeight=0,this._fbName="",this._capabilities={power:!1},this._supportsFence=!1,this._supportsContinuousUpdates=!1,this._enabledContinuousUpdates=!1,this._supportsSetDesktopSize=!1,this._screenID=0,this._screenFlags=0,this._qemuExtKeyEventSupported=!1,this._clipboardText=null,this._clipboardServerCapabilitiesActions={},this._clipboardServerCapabilitiesFormats={},this._sock=null,this._display=null,this._flushing=!1,this._keyboard=null,this._gestures=null,this._resizeObserver=null,this._disconnTimer=null,this._resizeTimeout=null,this._mouseMoveTimer=null,this._decoders={},this._FBU={rects:0,x:0,y:0,width:0,height:0,encoding:null},this._mousePos={},this._mouseButtonMask=0,this._mouseLastMoveTime=0,this._viewportDragging=!1,this._viewportDragPos={},this._viewportHasMoved=!1,this._accumulatedWheelDeltaX=0,this._accumulatedWheelDeltaY=0,this._gestureLastTapTime=null,this._gestureFirstDoubleTapEv=null,this._gestureLastMagnitudeX=0,this._gestureLastMagnitudeY=0,this._eventHandlers={focusCanvas:this._focusCanvas.bind(this),handleResize:this._handleResize.bind(this),handleMouse:this._handleMouse.bind(this),handleWheel:this._handleWheel.bind(this),handleGesture:this._handleGesture.bind(this),handleRSAAESCredentialsRequired:this._handleRSAAESCredentialsRequired.bind(this),handleRSAAESServerVerification:this._handleRSAAESServerVerification.bind(this)},Log.Debug(">> RFB.constructor"),this._screen=document.createElement("div"),this._screen.style.display="flex",this._screen.style.width="100%",this._screen.style.height="100%",this._screen.style.overflow="auto",this._screen.style.background="rgb(40, 40, 40)",this._canvas=document.createElement("canvas"),this._canvas.style.margin="auto",this._canvas.style.outline="none",this._canvas.width=0,this._canvas.height=0,this._canvas.tabIndex=-1,this._screen.appendChild(this._canvas),this._cursor=new Cursor,this._cursorImage=RFB.cursors.none,this._decoders[encodings.encodingRaw]=new RawDecoder,this._decoders[encodings.encodingCopyRect]=new CopyRectDecoder,this._decoders[encodings.encodingRRE]=new RREDecoder,this._decoders[encodings.encodingHextile]=new HextileDecoder,this._decoders[encodings.encodingTight]=new TightDecoder,this._decoders[encodings.encodingTightPNG]=new TightPNGDecoder,this._decoders[encodings.encodingZRLE]=new ZRLEDecoder,this._decoders[encodings.encodingJPEG]=new JPEGDecoder;try{this._display=new Display(this._canvas)}catch(exc){throw Log.Error("Display exception: "+exc),exc}this._display.onflush=this._onFlush.bind(this),this._keyboard=new Keyboard(this._canvas),this._keyboard.onkeyevent=this._handleKeyEvent.bind(this),this._gestures=new GestureHandler,this._sock=new Websock,this._sock.on("open",this._socketOpen.bind(this)),this._sock.on("close",this._socketClose.bind(this)),this._sock.on("message",this._handleMessage.bind(this)),this._sock.on("error",this._socketError.bind(this)),this._expectedClientWidth=null,this._expectedClientHeight=null,this._resizeObserver=new ResizeObserver(this._eventHandlers.handleResize),this._updateConnectionState("connecting"),Log.Debug("<< RFB.constructor"),this.dragViewport=!1,this.focusOnClick=!0,this._viewOnly=!1,this._clipViewport=!1,this._clippingViewport=!1,this._scaleViewport=!1,this._resizeSession=!1,this._showDotCursor=!1,void 0!==options.showDotCursor&&(Log.Warn("Specifying showDotCursor as a RFB constructor argument is deprecated"),this._showDotCursor=options.showDotCursor),this._qualityLevel=6,this._compressionLevel=2}get viewOnly(){return this._viewOnly}set viewOnly(viewOnly){this._viewOnly=viewOnly,"connecting"!==this._rfbConnectionState&&"connected"!==this._rfbConnectionState||(viewOnly?this._keyboard.ungrab():this._keyboard.grab())}get capabilities(){return this._capabilities}get clippingViewport(){return this._clippingViewport}_setClippingViewport(on){on!==this._clippingViewport&&(this._clippingViewport=on,this.dispatchEvent(new CustomEvent("clippingviewport",{detail:this._clippingViewport})))}get touchButton(){return 0}set touchButton(button){Log.Warn("Using old API!")}get clipViewport(){return this._clipViewport}set clipViewport(viewport){this._clipViewport=viewport,this._updateClip()}get scaleViewport(){return this._scaleViewport}set scaleViewport(scale){this._scaleViewport=scale,scale&&this._clipViewport&&this._updateClip(),this._updateScale(),!scale&&this._clipViewport&&this._updateClip()}get resizeSession(){return this._resizeSession}set resizeSession(resize){this._resizeSession=resize,resize&&this._requestRemoteResize()}get showDotCursor(){return this._showDotCursor}set showDotCursor(show){this._showDotCursor=show,this._refreshCursor()}get background(){return this._screen.style.background}set background(cssValue){this._screen.style.background=cssValue}get qualityLevel(){return this._qualityLevel}set qualityLevel(qualityLevel){!Number.isInteger(qualityLevel)||qualityLevel<0||qualityLevel>9?Log.Error("qualityLevel must be an integer between 0 and 9"):this._qualityLevel!==qualityLevel&&(this._qualityLevel=qualityLevel,"connected"===this._rfbConnectionState&&this._sendEncodings())}get compressionLevel(){return this._compressionLevel}set compressionLevel(compressionLevel){!Number.isInteger(compressionLevel)||compressionLevel<0||compressionLevel>9?Log.Error("compressionLevel must be an integer between 0 and 9"):this._compressionLevel!==compressionLevel&&(this._compressionLevel=compressionLevel,"connected"===this._rfbConnectionState&&this._sendEncodings())}disconnect(){this._updateConnectionState("disconnecting"),this._sock.off("error"),this._sock.off("message"),this._sock.off("open"),null!==this._rfbRSAAESAuthenticationState&&this._rfbRSAAESAuthenticationState.disconnect()}approveServer(){null!==this._rfbRSAAESAuthenticationState&&this._rfbRSAAESAuthenticationState.approveServer()}sendCredentials(creds){this._rfbCredentials=creds,this._resumeAuthentication()}sendCtrlAltDel(){"connected"!==this._rfbConnectionState||this._viewOnly||(Log.Info("Sending Ctrl-Alt-Del"),this.sendKey(KeyTable.XK_Control_L,"ControlLeft",!0),this.sendKey(KeyTable.XK_Alt_L,"AltLeft",!0),this.sendKey(KeyTable.XK_Delete,"Delete",!0),this.sendKey(KeyTable.XK_Delete,"Delete",!1),this.sendKey(KeyTable.XK_Alt_L,"AltLeft",!1),this.sendKey(KeyTable.XK_Control_L,"ControlLeft",!1))}machineShutdown(){this._xvpOp(1,2)}machineReboot(){this._xvpOp(1,3)}machineReset(){this._xvpOp(1,4)}sendKey(keysym,code,down){if("connected"!==this._rfbConnectionState||this._viewOnly)return;if(void 0===down)return this.sendKey(keysym,code,!0),void this.sendKey(keysym,code,!1);const scancode=XtScancode[code];if(this._qemuExtKeyEventSupported&&scancode)keysym=keysym||0,Log.Info("Sending key ("+(down?"down":"up")+"): keysym "+keysym+", scancode "+scancode),RFB.messages.QEMUExtendedKeyEvent(this._sock,keysym,down,scancode);else{if(!keysym)return;Log.Info("Sending keysym ("+(down?"down":"up")+"): "+keysym),RFB.messages.keyEvent(this._sock,keysym,down?1:0)}}focus(options){this._canvas.focus(options)}blur(){this._canvas.blur()}clipboardPasteFrom(text){if("connected"===this._rfbConnectionState&&!this._viewOnly)if(this._clipboardServerCapabilitiesFormats[1]&&this._clipboardServerCapabilitiesActions[1<<27])this._clipboardText=text,RFB.messages.extendedClipboardNotify(this._sock,[1]);else{let length,i,data;length=0;for(let codePoint of text)length++;data=new Uint8Array(length),i=0;for(let codePoint of text){let code=codePoint.codePointAt(0);code>255&&(code=63),data[i++]=code}RFB.messages.clientCutText(this._sock,data)}}getImageData(){return this._display.getImageData()}toDataURL(type,encoderOptions){return this._display.toDataURL(type,encoderOptions)}toBlob(callback,type,quality){return this._display.toBlob(callback,type,quality)}_connect(){if(Log.Debug(">> RFB.connect"),this._url)Log.Info(`connecting to ${this._url}`),this._sock.open(this._url,this._wsProtocols);else{if(Log.Info(`attaching ${this._rawChannel} to Websock`),this._sock.attach(this._rawChannel),"closed"===this._sock.readyState)throw Error("Cannot use already closed WebSocket/RTCDataChannel");"open"===this._sock.readyState&&this._socketOpen()}this._target.appendChild(this._screen),this._gestures.attach(this._canvas),this._cursor.attach(this._canvas),this._refreshCursor(),this._resizeObserver.observe(this._screen),this._canvas.addEventListener("mousedown",this._eventHandlers.focusCanvas),this._canvas.addEventListener("touchstart",this._eventHandlers.focusCanvas),this._canvas.addEventListener("mousedown",this._eventHandlers.handleMouse),this._canvas.addEventListener("mouseup",this._eventHandlers.handleMouse),this._canvas.addEventListener("mousemove",this._eventHandlers.handleMouse),this._canvas.addEventListener("click",this._eventHandlers.handleMouse),this._canvas.addEventListener("contextmenu",this._eventHandlers.handleMouse),this._canvas.addEventListener("wheel",this._eventHandlers.handleWheel),this._canvas.addEventListener("gesturestart",this._eventHandlers.handleGesture),this._canvas.addEventListener("gesturemove",this._eventHandlers.handleGesture),this._canvas.addEventListener("gestureend",this._eventHandlers.handleGesture),Log.Debug("<< RFB.connect")}_disconnect(){Log.Debug(">> RFB.disconnect"),this._cursor.detach(),this._canvas.removeEventListener("gesturestart",this._eventHandlers.handleGesture),this._canvas.removeEventListener("gesturemove",this._eventHandlers.handleGesture),this._canvas.removeEventListener("gestureend",this._eventHandlers.handleGesture),this._canvas.removeEventListener("wheel",this._eventHandlers.handleWheel),this._canvas.removeEventListener("mousedown",this._eventHandlers.handleMouse),this._canvas.removeEventListener("mouseup",this._eventHandlers.handleMouse),this._canvas.removeEventListener("mousemove",this._eventHandlers.handleMouse),this._canvas.removeEventListener("click",this._eventHandlers.handleMouse),this._canvas.removeEventListener("contextmenu",this._eventHandlers.handleMouse),this._canvas.removeEventListener("mousedown",this._eventHandlers.focusCanvas),this._canvas.removeEventListener("touchstart",this._eventHandlers.focusCanvas),this._resizeObserver.disconnect(),this._keyboard.ungrab(),this._gestures.detach(),this._sock.close();try{this._target.removeChild(this._screen)}catch(e){if("NotFoundError"!==e.name)throw e}clearTimeout(this._resizeTimeout),clearTimeout(this._mouseMoveTimer),Log.Debug("<< RFB.disconnect")}_socketOpen(){"connecting"===this._rfbConnectionState&&""===this._rfbInitState?(this._rfbInitState="ProtocolVersion",Log.Debug("Starting VNC handshake")):this._fail("Unexpected server connection while "+this._rfbConnectionState)}_socketClose(e){Log.Debug("WebSocket on-close event");let msg="";switch(e.code&&(msg="(code: "+e.code,e.reason&&(msg+=", reason: "+e.reason),msg+=")"),this._rfbConnectionState){case"connecting":this._fail("Connection closed "+msg);break;case"connected":this._updateConnectionState("disconnecting"),this._updateConnectionState("disconnected");break;case"disconnecting":this._updateConnectionState("disconnected");break;case"disconnected":this._fail("Unexpected server disconnect when already disconnected "+msg);break;default:this._fail("Unexpected server disconnect before connecting "+msg)}this._sock.off("close"),this._rawChannel=null}_socketError(e){Log.Warn("WebSocket on-error event")}_focusCanvas(event){this.focusOnClick&&this.focus({preventScroll:!0})}_setDesktopName(name){this._fbName=name,this.dispatchEvent(new CustomEvent("desktopname",{detail:{name:this._fbName}}))}_saveExpectedClientSize(){this._expectedClientWidth=this._screen.clientWidth,this._expectedClientHeight=this._screen.clientHeight}_currentClientSize(){return[this._screen.clientWidth,this._screen.clientHeight]}_clientHasExpectedSize(){const[currentWidth,currentHeight]=this._currentClientSize();return currentWidth==this._expectedClientWidth&&currentHeight==this._expectedClientHeight}_handleResize(){this._clientHasExpectedSize()||(window.requestAnimationFrame(()=>{this._updateClip(),this._updateScale()}),this._resizeSession&&(clearTimeout(this._resizeTimeout),this._resizeTimeout=setTimeout(this._requestRemoteResize.bind(this),500)))}_updateClip(){const curClip=this._display.clipViewport;let newClip=this._clipViewport;if(this._scaleViewport&&(newClip=!1),curClip!==newClip&&(this._display.clipViewport=newClip),newClip){const size=this._screenSize();this._display.viewportChangeSize(size.w,size.h),this._fixScrollbars(),this._setClippingViewport(size.w<this._display.width||size.h<this._display.height)}else this._setClippingViewport(!1);curClip!==newClip&&this._saveExpectedClientSize()}_updateScale(){if(this._scaleViewport){const size=this._screenSize();this._display.autoscale(size.w,size.h)}else this._display.scale=1;this._fixScrollbars()}_requestRemoteResize(){if(clearTimeout(this._resizeTimeout),this._resizeTimeout=null,!this._resizeSession||this._viewOnly||!this._supportsSetDesktopSize)return;const size=this._screenSize();RFB.messages.setDesktopSize(this._sock,Math.floor(size.w),Math.floor(size.h),this._screenID,this._screenFlags),Log.Debug("Requested new desktop size: "+size.w+"x"+size.h)}_screenSize(){let r=this._screen.getBoundingClientRect();return{w:r.width,h:r.height}}_fixScrollbars(){const orig=this._screen.style.overflow;this._screen.style.overflow="hidden",this._screen.getBoundingClientRect(),this._screen.style.overflow=orig}_updateConnectionState(state){const oldstate=this._rfbConnectionState;if(state!==oldstate)if("disconnected"!==oldstate){switch(state){case"connected":if("connecting"!==oldstate)return void Log.Error("Bad transition to connected state, previous connection state: "+oldstate);break;case"disconnected":if("disconnecting"!==oldstate)return void Log.Error("Bad transition to disconnected state, previous connection state: "+oldstate);break;case"connecting":if(""!==oldstate)return void Log.Error("Bad transition to connecting state, previous connection state: "+oldstate);break;case"disconnecting":if("connected"!==oldstate&&"connecting"!==oldstate)return void Log.Error("Bad transition to disconnecting state, previous connection state: "+oldstate);break;default:return void Log.Error("Unknown connection state: "+state)}switch(this._rfbConnectionState=state,Log.Debug("New state '"+state+"', was '"+oldstate+"'."),this._disconnTimer&&"disconnecting"!==state&&(Log.Debug("Clearing disconnect timer"),clearTimeout(this._disconnTimer),this._disconnTimer=null,this._sock.off("close")),state){case"connecting":this._connect();break;case"connected":this.dispatchEvent(new CustomEvent("connect",{detail:{}}));break;case"disconnecting":this._disconnect(),this._disconnTimer=setTimeout(()=>{Log.Error("Disconnection timed out."),this._updateConnectionState("disconnected")},3e3);break;case"disconnected":this.dispatchEvent(new CustomEvent("disconnect",{detail:{clean:this._rfbCleanDisconnect}}))}}else Log.Error("Tried changing state of a disconnected RFB object");else Log.Debug("Already in state '"+state+"', ignoring")}_fail(details){switch(this._rfbConnectionState){case"disconnecting":Log.Error("Failed when disconnecting: "+details);break;case"connected":Log.Error("Failed while connected: "+details);break;case"connecting":Log.Error("Failed when connecting: "+details);break;default:Log.Error("RFB failure: "+details)}return this._rfbCleanDisconnect=!1,this._updateConnectionState("disconnecting"),this._updateConnectionState("disconnected"),!1}_setCapability(cap,val){this._capabilities[cap]=val,this.dispatchEvent(new CustomEvent("capabilities",{detail:{capabilities:this._capabilities}}))}_handleMessage(){if(0!==this._sock.rQlen)switch(this._rfbConnectionState){case"disconnected":Log.Error("Got data while disconnected");break;case"connected":for(;!this._flushing&&this._normalMsg()&&0!==this._sock.rQlen;);break;case"connecting":for(;"connecting"===this._rfbConnectionState&&this._initMsg(););break;default:Log.Error("Got data while in an invalid state")}else Log.Warn("handleMessage called on an empty receive queue")}_handleKeyEvent(keysym,code,down){this.sendKey(keysym,code,down)}_handleMouse(ev){if("click"===ev.type&&ev.target!==this._canvas)return;if(ev.stopPropagation(),ev.preventDefault(),"click"===ev.type||"contextmenu"===ev.type)return;let pos=clientToElement(ev.clientX,ev.clientY,this._canvas);switch(ev.type){case"mousedown":setCapture(this._canvas),this._handleMouseButton(pos.x,pos.y,!0,1<<ev.button);break;case"mouseup":this._handleMouseButton(pos.x,pos.y,!1,1<<ev.button);break;case"mousemove":this._handleMouseMove(pos.x,pos.y)}}_handleMouseButton(x,y,down,bmask){if(this.dragViewport){if(down&&!this._viewportDragging)return this._viewportDragging=!0,this._viewportDragPos={x:x,y:y},void(this._viewportHasMoved=!1);if(this._viewportDragging=!1,this._viewportHasMoved)return;this._sendMouse(x,y,bmask)}null!==this._mouseMoveTimer&&(clearTimeout(this._mouseMoveTimer),this._mouseMoveTimer=null,this._sendMouse(x,y,this._mouseButtonMask)),down?this._mouseButtonMask|=bmask:this._mouseButtonMask&=~bmask,this._sendMouse(x,y,this._mouseButtonMask)}_handleMouseMove(x,y){if(this._viewportDragging){const deltaX=this._viewportDragPos.x-x,deltaY=this._viewportDragPos.y-y;(this._viewportHasMoved||Math.abs(deltaX)>dragThreshold||Math.abs(deltaY)>dragThreshold)&&(this._viewportHasMoved=!0,this._viewportDragPos={x:x,y:y},this._display.viewportChangePos(deltaX,deltaY))}else if(this._mousePos={x:x,y:y},null==this._mouseMoveTimer){const timeSinceLastMove=Date.now()-this._mouseLastMoveTime;timeSinceLastMove>17?(this._sendMouse(x,y,this._mouseButtonMask),this._mouseLastMoveTime=Date.now()):this._mouseMoveTimer=setTimeout(()=>{this._handleDelayedMouseMove()},17-timeSinceLastMove)}}_handleDelayedMouseMove(){this._mouseMoveTimer=null,this._sendMouse(this._mousePos.x,this._mousePos.y,this._mouseButtonMask),this._mouseLastMoveTime=Date.now()}_sendMouse(x,y,mask){"connected"===this._rfbConnectionState&&(this._viewOnly||RFB.messages.pointerEvent(this._sock,this._display.absX(x),this._display.absY(y),mask))}_handleWheel(ev){if("connected"!==this._rfbConnectionState)return;if(this._viewOnly)return;ev.stopPropagation(),ev.preventDefault();let pos=clientToElement(ev.clientX,ev.clientY,this._canvas),dX=ev.deltaX,dY=ev.deltaY;0!==ev.deltaMode&&(dX*=19,dY*=19),this._accumulatedWheelDeltaX+=dX,this._accumulatedWheelDeltaY+=dY,Math.abs(this._accumulatedWheelDeltaX)>=50&&(this._accumulatedWheelDeltaX<0?(this._handleMouseButton(pos.x,pos.y,!0,32),this._handleMouseButton(pos.x,pos.y,!1,32)):this._accumulatedWheelDeltaX>0&&(this._handleMouseButton(pos.x,pos.y,!0,64),this._handleMouseButton(pos.x,pos.y,!1,64)),this._accumulatedWheelDeltaX=0),Math.abs(this._accumulatedWheelDeltaY)>=50&&(this._accumulatedWheelDeltaY<0?(this._handleMouseButton(pos.x,pos.y,!0,8),this._handleMouseButton(pos.x,pos.y,!1,8)):this._accumulatedWheelDeltaY>0&&(this._handleMouseButton(pos.x,pos.y,!0,16),this._handleMouseButton(pos.x,pos.y,!1,16)),this._accumulatedWheelDeltaY=0)}_fakeMouseMove(ev,elementX,elementY){this._handleMouseMove(elementX,elementY),this._cursor.move(ev.detail.clientX,ev.detail.clientY)}_handleTapEvent(ev,bmask){let pos=clientToElement(ev.detail.clientX,ev.detail.clientY,this._canvas);if(null!==this._gestureLastTapTime&&Date.now()-this._gestureLastTapTime<1e3&&this._gestureFirstDoubleTapEv.detail.type===ev.detail.type){let dx=this._gestureFirstDoubleTapEv.detail.clientX-ev.detail.clientX,dy=this._gestureFirstDoubleTapEv.detail.clientY-ev.detail.clientY,distance;Math.hypot(dx,dy)<50?pos=clientToElement(this._gestureFirstDoubleTapEv.detail.clientX,this._gestureFirstDoubleTapEv.detail.clientY,this._canvas):this._gestureFirstDoubleTapEv=ev}else this._gestureFirstDoubleTapEv=ev;this._gestureLastTapTime=Date.now(),this._fakeMouseMove(this._gestureFirstDoubleTapEv,pos.x,pos.y),this._handleMouseButton(pos.x,pos.y,!0,bmask),this._handleMouseButton(pos.x,pos.y,!1,bmask)}_handleGesture(ev){let magnitude,pos=clientToElement(ev.detail.clientX,ev.detail.clientY,this._canvas);switch(ev.type){case"gesturestart":switch(ev.detail.type){case"onetap":this._handleTapEvent(ev,1);break;case"twotap":this._handleTapEvent(ev,4);break;case"threetap":this._handleTapEvent(ev,2);break;case"drag":this._fakeMouseMove(ev,pos.x,pos.y),this._handleMouseButton(pos.x,pos.y,!0,1);break;case"longpress":this._fakeMouseMove(ev,pos.x,pos.y),this._handleMouseButton(pos.x,pos.y,!0,4);break;case"twodrag":this._gestureLastMagnitudeX=ev.detail.magnitudeX,this._gestureLastMagnitudeY=ev.detail.magnitudeY,this._fakeMouseMove(ev,pos.x,pos.y);break;case"pinch":this._gestureLastMagnitudeX=Math.hypot(ev.detail.magnitudeX,ev.detail.magnitudeY),this._fakeMouseMove(ev,pos.x,pos.y)}break;case"gesturemove":switch(ev.detail.type){case"onetap":case"twotap":case"threetap":break;case"drag":case"longpress":this._fakeMouseMove(ev,pos.x,pos.y);break;case"twodrag":for(this._fakeMouseMove(ev,pos.x,pos.y);ev.detail.magnitudeY-this._gestureLastMagnitudeY>50;)this._handleMouseButton(pos.x,pos.y,!0,8),this._handleMouseButton(pos.x,pos.y,!1,8),this._gestureLastMagnitudeY+=50;for(;ev.detail.magnitudeY-this._gestureLastMagnitudeY<-50;)this._handleMouseButton(pos.x,pos.y,!0,16),this._handleMouseButton(pos.x,pos.y,!1,16),this._gestureLastMagnitudeY-=50;for(;ev.detail.magnitudeX-this._gestureLastMagnitudeX>50;)this._handleMouseButton(pos.x,pos.y,!0,32),this._handleMouseButton(pos.x,pos.y,!1,32),this._gestureLastMagnitudeX+=50;for(;ev.detail.magnitudeX-this._gestureLastMagnitudeX<-50;)this._handleMouseButton(pos.x,pos.y,!0,64),this._handleMouseButton(pos.x,pos.y,!1,64),this._gestureLastMagnitudeX-=50;break;case"pinch":if(this._fakeMouseMove(ev,pos.x,pos.y),magnitude=Math.hypot(ev.detail.magnitudeX,ev.detail.magnitudeY),Math.abs(magnitude-this._gestureLastMagnitudeX)>75){for(this._handleKeyEvent(KeyTable.XK_Control_L,"ControlLeft",!0);magnitude-this._gestureLastMagnitudeX>75;)this._handleMouseButton(pos.x,pos.y,!0,8),this._handleMouseButton(pos.x,pos.y,!1,8),this._gestureLastMagnitudeX+=75;for(;magnitude-this._gestureLastMagnitudeX<-75;)this._handleMouseButton(pos.x,pos.y,!0,16),this._handleMouseButton(pos.x,pos.y,!1,16),this._gestureLastMagnitudeX-=75}this._handleKeyEvent(KeyTable.XK_Control_L,"ControlLeft",!1)}break;case"gestureend":switch(ev.detail.type){case"onetap":case"twotap":case"threetap":case"pinch":case"twodrag":break;case"drag":this._fakeMouseMove(ev,pos.x,pos.y),this._handleMouseButton(pos.x,pos.y,!1,1);break;case"longpress":this._fakeMouseMove(ev,pos.x,pos.y),this._handleMouseButton(pos.x,pos.y,!1,4)}}}_negotiateProtocolVersion(){if(this._sock.rQwait("version",12))return!1;const sversion=this._sock.rQshiftStr(12).substr(4,7);Log.Info("Server ProtocolVersion: "+sversion);let isRepeater=0;switch(sversion){case"000.000":isRepeater=1;break;case"003.003":case"003.006":this._rfbVersion=3.3;break;case"003.007":this._rfbVersion=3.7;break;case"003.008":case"003.889":case"004.000":case"004.001":case"005.000":this._rfbVersion=3.8;break;default:return this._fail("Invalid server version "+sversion)}if(isRepeater){let repeaterID="ID:"+this._repeaterID;for(;repeaterID.length<250;)repeaterID+="\0";return this._sock.sendString(repeaterID),!0}this._rfbVersion>this._rfbMaxVersion&&(this._rfbVersion=this._rfbMaxVersion);const cversion="00"+parseInt(this._rfbVersion,10)+".00"+10*this._rfbVersion%10;this._sock.sendString("RFB "+cversion+"\n"),Log.Debug("Sent ProtocolVersion: "+cversion),this._rfbInitState="Security"}_isSupportedSecurityType(type){const clientTypes=[1,2,6,16,19,22,30,113,256];return clientTypes.includes(type)}_negotiateSecurity(){if(this._rfbVersion>=3.7){const numTypes=this._sock.rQshift8();if(this._sock.rQwait("security type",numTypes,1))return!1;if(0===numTypes)return this._rfbInitState="SecurityReason",this._securityContext="no security types",this._securityStatus=1,!0;const types=this._sock.rQshiftBytes(numTypes);Log.Debug("Server security types: "+types),this._rfbAuthScheme=-1;for(let type of types)if(this._isSupportedSecurityType(type)){this._rfbAuthScheme=type;break}if(-1===this._rfbAuthScheme)return this._fail("Unsupported security types (types: "+types+")");this._sock.send([this._rfbAuthScheme])}else{if(this._sock.rQwait("security scheme",4))return!1;if(this._rfbAuthScheme=this._sock.rQshift32(),0==this._rfbAuthScheme)return this._rfbInitState="SecurityReason",this._securityContext="authentication scheme",this._securityStatus=1,!0}return this._rfbInitState="Authentication",Log.Debug("Authenticating using scheme: "+this._rfbAuthScheme),!0}_handleSecurityReason(){if(this._sock.rQwait("reason length",4))return!1;const strlen=this._sock.rQshift32();let reason="";if(strlen>0){if(this._sock.rQwait("reason",strlen,4))return!1;reason=this._sock.rQshiftStr(strlen)}return""!==reason?(this.dispatchEvent(new CustomEvent("securityfailure",{detail:{status:this._securityStatus,reason:reason}})),this._fail("Security negotiation failed on "+this._securityContext+" (reason: "+reason+")")):(this.dispatchEvent(new CustomEvent("securityfailure",{detail:{status:this._securityStatus}})),this._fail("Security negotiation failed on "+this._securityContext))}_negotiateXvpAuth(){if(void 0===this._rfbCredentials.username||void 0===this._rfbCredentials.password||void 0===this._rfbCredentials.target)return this.dispatchEvent(new CustomEvent("credentialsrequired",{detail:{types:["username","password","target"]}})),!1;const xvpAuthStr=String.fromCharCode(this._rfbCredentials.username.length)+String.fromCharCode(this._rfbCredentials.target.length)+this._rfbCredentials.username+this._rfbCredentials.target;return this._sock.sendString(xvpAuthStr),this._rfbAuthScheme=2,this._negotiateAuthentication()}_negotiateVeNCryptAuth(){if(0==this._rfbVeNCryptState){if(this._sock.rQwait("vencrypt version",2))return!1;const major=this._sock.rQshift8(),minor=this._sock.rQshift8();if(0!=major||2!=minor)return this._fail("Unsupported VeNCrypt version "+major+"."+minor);this._sock.send([0,2]),this._rfbVeNCryptState=1}if(1==this._rfbVeNCryptState){if(this._sock.rQwait("vencrypt ack",1))return!1;const res=this._sock.rQshift8();if(0!=res)return this._fail("VeNCrypt failure "+res);this._rfbVeNCryptState=2}if(2==this._rfbVeNCryptState){if(this._sock.rQwait("vencrypt subtypes length",1))return!1;const subtypesLength=this._sock.rQshift8();if(subtypesLength<1)return this._fail("VeNCrypt subtypes empty");this._rfbVeNCryptSubtypesLength=subtypesLength,this._rfbVeNCryptState=3}if(3==this._rfbVeNCryptState){if(this._sock.rQwait("vencrypt subtypes",4*this._rfbVeNCryptSubtypesLength))return!1;const subtypes=[];for(let i=0;i<this._rfbVeNCryptSubtypesLength;i++)subtypes.push(this._sock.rQshift32());this._rfbAuthScheme=-1;for(let type of subtypes)if(19!==type&&this._isSupportedSecurityType(type)){this._rfbAuthScheme=type;break}return-1===this._rfbAuthScheme?this._fail("Unsupported security types (types: "+subtypes+")"):(this._sock.send([this._rfbAuthScheme>>24,this._rfbAuthScheme>>16,this._rfbAuthScheme>>8,this._rfbAuthScheme]),this._rfbVeNCryptState,!0)}}_negotiatePlainAuth(){if(void 0===this._rfbCredentials.username||void 0===this._rfbCredentials.password)return this.dispatchEvent(new CustomEvent("credentialsrequired",{detail:{types:["username","password"]}})),!1;const user=encodeUTF8(this._rfbCredentials.username),pass=encodeUTF8(this._rfbCredentials.password);return this._sock.send([user.length>>24&255,user.length>>16&255,user.length>>8&255,255&user.length]),this._sock.send([pass.length>>24&255,pass.length>>16&255,pass.length>>8&255,255&pass.length]),this._sock.sendString(user),this._sock.sendString(pass),this._rfbInitState="SecurityResult",!0}_negotiateStdVNCAuth(){if(this._sock.rQwait("auth challenge",16))return!1;if(void 0===this._rfbCredentials.password)return this.dispatchEvent(new CustomEvent("credentialsrequired",{detail:{types:["password"]}})),!1;const challenge=Array.prototype.slice.call(this._sock.rQshiftBytes(16)),response=RFB.genDES(this._rfbCredentials.password,challenge);return this._sock.send(response),this._rfbInitState="SecurityResult",!0}_negotiateARDAuth(){if(void 0===this._rfbCredentials.username||void 0===this._rfbCredentials.password)return this.dispatchEvent(new CustomEvent("credentialsrequired",{detail:{types:["username","password"]}})),!1;if(null!=this._rfbCredentials.ardPublicKey&&null!=this._rfbCredentials.ardCredentials)return this._sock.send(this._rfbCredentials.ardCredentials),this._sock.send(this._rfbCredentials.ardPublicKey),this._rfbCredentials.ardCredentials=null,this._rfbCredentials.ardPublicKey=null,this._rfbInitState="SecurityResult",!0;if(this._sock.rQwait("read ard",4))return!1;let generator=this._sock.rQshiftBytes(2),keyLength=this._sock.rQshift16();if(this._sock.rQwait("read ard keylength",2*keyLength,4))return!1;let prime=this._sock.rQshiftBytes(keyLength),serverPublicKey=this._sock.rQshiftBytes(keyLength),clientPrivateKey=window.crypto.getRandomValues(new Uint8Array(keyLength)),padding=Array.from(window.crypto.getRandomValues(new Uint8Array(64)),byte=>String.fromCharCode(65+byte%26)).join("");return this._negotiateARDAuthAsync(generator,keyLength,prime,serverPublicKey,clientPrivateKey,padding),!1}_modPow(base,exponent,modulus){let baseHex="0x"+Array.from(base,byte=>("0"+(255&byte).toString(16)).slice(-2)).join(""),exponentHex="0x"+Array.from(exponent,byte=>("0"+(255&byte).toString(16)).slice(-2)).join(""),modulusHex="0x"+Array.from(modulus,byte=>("0"+(255&byte).toString(16)).slice(-2)).join(""),b=BigInt(baseHex),e=BigInt(exponentHex),m=BigInt(modulusHex),r=1n;for(b%=m;e>0;)e%2n===1n&&(r=r*b%m),e/=2n,b=b*b%m;let hexResult=r.toString(16);for(;hexResult.length/2<exponent.length||hexResult.length%2!=0;)hexResult="0"+hexResult;let bytesResult=[];for(let c=0;c<hexResult.length;c+=2)bytesResult.push(parseInt(hexResult.substr(c,2),16));return bytesResult}async _aesEcbEncrypt(string,key){let keyString=Array.from(key,byte=>String.fromCharCode(byte)).join(""),aesKey=await window.crypto.subtle.importKey("raw",MD5(keyString),{name:"AES-CBC"},!1,["encrypt"]),data=new Uint8Array(string.length);for(let i=0;i<string.length;++i)data[i]=string.charCodeAt(i);let encrypted=new Uint8Array(data.length);for(let i=0;i<data.length;i+=16){let block=data.slice(i,i+16),encryptedBlock=await window.crypto.subtle.encrypt({name:"AES-CBC",iv:block},aesKey,new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]));encrypted.set(new Uint8Array(encryptedBlock).slice(0,16),i)}return encrypted}async _negotiateARDAuthAsync(generator,keyLength,prime,serverPublicKey,clientPrivateKey,padding){let clientPublicKey=this._modPow(generator,clientPrivateKey,prime),sharedKey=this._modPow(serverPublicKey,clientPrivateKey,prime),username=encodeUTF8(this._rfbCredentials.username).substring(0,63),password=encodeUTF8(this._rfbCredentials.password).substring(0,63),paddedUsername=username+"\0"+padding.substring(0,63),paddedPassword=password+"\0"+padding.substring(0,63),credentials=paddedUsername.substring(0,64)+paddedPassword.substring(0,64),encrypted=await this._aesEcbEncrypt(credentials,sharedKey);this._rfbCredentials.ardCredentials=encrypted,this._rfbCredentials.ardPublicKey=clientPublicKey,this._resumeAuthentication()}_negotiateTightUnixAuth(){return void 0===this._rfbCredentials.username||void 0===this._rfbCredentials.password?(this.dispatchEvent(new CustomEvent("credentialsrequired",{detail:{types:["username","password"]}})),!1):(this._sock.send([0,0,0,this._rfbCredentials.username.length]),this._sock.send([0,0,0,this._rfbCredentials.password.length]),this._sock.sendString(this._rfbCredentials.username),this._sock.sendString(this._rfbCredentials.password),this._rfbInitState="SecurityResult",!0)}_negotiateTightTunnels(numTunnels){const clientSupportedTunnelTypes_0={vendor:"TGHT",signature:"NOTUNNEL"},serverSupportedTunnelTypes={};for(let i=0;i<numTunnels;i++){const capCode=this._sock.rQshift32(),capVendor=this._sock.rQshiftStr(4),capSignature=this._sock.rQshiftStr(8);serverSupportedTunnelTypes[capCode]={vendor:capVendor,signature:capSignature}}return Log.Debug("Server Tight tunnel types: "+serverSupportedTunnelTypes),serverSupportedTunnelTypes[1]&&"SICR"===serverSupportedTunnelTypes[1].vendor&&"SCHANNEL"===serverSupportedTunnelTypes[1].signature&&(Log.Debug("Detected Siemens server. Assuming NOTUNNEL support."),serverSupportedTunnelTypes[0]={vendor:"TGHT",signature:"NOTUNNEL"}),serverSupportedTunnelTypes[0]?serverSupportedTunnelTypes[0].vendor!=clientSupportedTunnelTypes_0.vendor||serverSupportedTunnelTypes[0].signature!=clientSupportedTunnelTypes_0.signature?this._fail("Client's tunnel type had the incorrect vendor or signature"):(Log.Debug("Selected tunnel type: "+clientSupportedTunnelTypes_0),this._sock.send([0,0,0,0]),!1):this._fail("Server wanted tunnels, but doesn't support the notunnel type")}_negotiateTightAuth(){if(!this._rfbTightVNC){if(this._sock.rQwait("num tunnels",4))return!1;const numTunnels=this._sock.rQshift32();if(numTunnels>0&&this._sock.rQwait("tunnel capabilities",16*numTunnels,4))return!1;if(this._rfbTightVNC=!0,numTunnels>0)return this._negotiateTightTunnels(numTunnels),!1}if(this._sock.rQwait("sub auth count",4))return!1;const subAuthCount=this._sock.rQshift32();if(0===subAuthCount)return this._rfbInitState="SecurityResult",!0;if(this._sock.rQwait("sub auth capabilities",16*subAuthCount,4))return!1;const clientSupportedTypes={STDVNOAUTH__:1,STDVVNCAUTH_:2,TGHTULGNAUTH:129},serverSupportedTypes=[];for(let i=0;i<subAuthCount;i++){this._sock.rQshift32();const capabilities=this._sock.rQshiftStr(12);serverSupportedTypes.push(capabilities)}Log.Debug("Server Tight authentication types: "+serverSupportedTypes);for(let authType in clientSupportedTypes)if(-1!=serverSupportedTypes.indexOf(authType))switch(this._sock.send([0,0,0,clientSupportedTypes[authType]]),Log.Debug("Selected authentication type: "+authType),authType){case"STDVNOAUTH__":return this._rfbInitState="SecurityResult",!0;case"STDVVNCAUTH_":return this._rfbAuthScheme=2,!0;case"TGHTULGNAUTH":return this._rfbAuthScheme=129,!0;default:return this._fail("Unsupported tiny auth scheme (scheme: "+authType+")")}return this._fail("No supported sub-auth types!")}_handleRSAAESCredentialsRequired(event){this.dispatchEvent(event)}_handleRSAAESServerVerification(event){this.dispatchEvent(event)}_negotiateRA2neAuth(){return null===this._rfbRSAAESAuthenticationState&&(this._rfbRSAAESAuthenticationState=new RSAAESAuthenticationState(this._sock,()=>this._rfbCredentials),this._rfbRSAAESAuthenticationState.addEventListener("serververification",this._eventHandlers.handleRSAAESServerVerification),this._rfbRSAAESAuthenticationState.addEventListener("credentialsrequired",this._eventHandlers.handleRSAAESCredentialsRequired)),this._rfbRSAAESAuthenticationState.checkInternalEvents(),this._rfbRSAAESAuthenticationState.hasStarted||this._rfbRSAAESAuthenticationState.negotiateRA2neAuthAsync().catch(e=>{"disconnect normally"!==e.message&&this._fail(e.message)}).then(()=>(this.dispatchEvent(new CustomEvent("securityresult")),this._rfbInitState="SecurityResult",!0)).finally(()=>{this._rfbRSAAESAuthenticationState.removeEventListener("serververification",this._eventHandlers.handleRSAAESServerVerification),this._rfbRSAAESAuthenticationState.removeEventListener("credentialsrequired",this._eventHandlers.handleRSAAESCredentialsRequired),this._rfbRSAAESAuthenticationState=null}),!1}_negotiateMSLogonIIAuth(){if(this._sock.rQwait("mslogonii dh param",24))return!1;if(void 0===this._rfbCredentials.username||void 0===this._rfbCredentials.password)return this.dispatchEvent(new CustomEvent("credentialsrequired",{detail:{types:["username","password"]}})),!1;const g=this._sock.rQshiftBytes(8),p=this._sock.rQshiftBytes(8),A=this._sock.rQshiftBytes(8),b=window.crypto.getRandomValues(new Uint8Array(8)),B=new Uint8Array(this._modPow(g,b,p)),secret=new Uint8Array(this._modPow(A,b,p)),des=new DES(secret),username=encodeUTF8(this._rfbCredentials.username).substring(0,255),password=encodeUTF8(this._rfbCredentials.password).substring(0,63),usernameBytes=new Uint8Array(256),passwordBytes=new Uint8Array(64);window.crypto.getRandomValues(usernameBytes),window.crypto.getRandomValues(passwordBytes);for(let i=0;i<username.length;i++)usernameBytes[i]=username.charCodeAt(i);usernameBytes[username.length]=0;for(let i=0;i<password.length;i++)passwordBytes[i]=password.charCodeAt(i);passwordBytes[password.length]=0;let x=new Uint8Array(secret);for(let i=0;i<32;i++){for(let j=0;j<8;j++)x[j]^=usernameBytes[8*i+j];x=des.enc8(x),usernameBytes.set(x,8*i)}x=new Uint8Array(secret);for(let i=0;i<8;i++){for(let j=0;j<8;j++)x[j]^=passwordBytes[8*i+j];x=des.enc8(x),passwordBytes.set(x,8*i)}return this._sock.send(B),this._sock.send(usernameBytes),this._sock.send(passwordBytes),this._rfbInitState="SecurityResult",!0}_negotiateAuthentication(){switch(this._rfbAuthScheme){case 1:return this._rfbInitState="SecurityResult",!0;case 22:return this._negotiateXvpAuth();case 30:return this._negotiateARDAuth();case 2:return this._negotiateStdVNCAuth();case 16:return this._negotiateTightAuth();case 19:return this._negotiateVeNCryptAuth();case 256:return this._negotiatePlainAuth();case 129:return this._negotiateTightUnixAuth();case 6:return this._negotiateRA2neAuth();case 113:return this._negotiateMSLogonIIAuth();default:return this._fail("Unsupported auth scheme (scheme: "+this._rfbAuthScheme+")")}}_handleSecurityResult(){if(this._rfbVersion<3.7)return this._rfbInitState="ClientInitialisation",!0;if(this._sock.rQwait("VNC auth response ",4))return!1;const status=this._sock.rQshift32();return 0===status?(this._rfbInitState="ClientInitialisation",Log.Debug("Authentication OK"),!0):this._rfbVersion>=3.8?(this._rfbInitState="SecurityReason",this._securityContext="security result",this._securityStatus=status,!0):(this.dispatchEvent(new CustomEvent("securityfailure",{detail:{status:status}})),this._fail("Security handshake failed"))}_negotiateServerInit(){if(this._sock.rQwait("server initialization",24))return!1;const width=this._sock.rQshift16(),height=this._sock.rQshift16(),bpp=this._sock.rQshift8(),depth=this._sock.rQshift8(),bigEndian=this._sock.rQshift8(),trueColor=this._sock.rQshift8(),redMax=this._sock.rQshift16(),greenMax=this._sock.rQshift16(),blueMax=this._sock.rQshift16(),redShift=this._sock.rQshift8(),greenShift=this._sock.rQshift8(),blueShift=this._sock.rQshift8();this._sock.rQskipBytes(3);const nameLength=this._sock.rQshift32();if(this._sock.rQwait("server init name",nameLength,24))return!1;let name=this._sock.rQshiftStr(nameLength);if(name=decodeUTF8(name,!0),this._rfbTightVNC){if(this._sock.rQwait("TightVNC extended server init header",8,24+nameLength))return!1;const numServerMessages=this._sock.rQshift16(),numClientMessages=this._sock.rQshift16(),numEncodings=this._sock.rQshift16();this._sock.rQskipBytes(2);const totalMessagesLength=16*(numServerMessages+numClientMessages+numEncodings);if(this._sock.rQwait("TightVNC extended server init header",totalMessagesLength,32+nameLength))return!1;this._sock.rQskipBytes(16*numServerMessages),this._sock.rQskipBytes(16*numClientMessages),this._sock.rQskipBytes(16*numEncodings)}return Log.Info("Screen: "+width+"x"+height+", bpp: "+bpp+", depth: "+depth+", bigEndian: "+bigEndian+", trueColor: "+trueColor+", redMax: "+redMax+", greenMax: "+greenMax+", blueMax: "+blueMax+", redShift: "+redShift+", greenShift: "+greenShift+", blueShift: "+blueShift),this._setDesktopName(name),this._resize(width,height),this._viewOnly||this._keyboard.grab(),this._fbDepth=24,"Intel(r) AMT KVM"===this._fbName&&(Log.Warn("Intel AMT KVM only supports 8/16 bit depths. Using low color mode."),this._fbDepth=8),RFB.messages.pixelFormat(this._sock,this._fbDepth,!0),this._sendEncodings(),RFB.messages.fbUpdateRequest(this._sock,!1,0,0,this._fbWidth,this._fbHeight),this._updateConnectionState("connected"),!0}_sendEncodings(){const encs=[];encs.push(encodings.encodingCopyRect),24==this._fbDepth&&(encs.push(encodings.encodingTight),encs.push(encodings.encodingTightPNG),encs.push(encodings.encodingZRLE),encs.push(encodings.encodingJPEG),encs.push(encodings.encodingHextile),encs.push(encodings.encodingRRE)),encs.push(encodings.encodingRaw),encs.push(encodings.pseudoEncodingQualityLevel0+this._qualityLevel),encs.push(encodings.pseudoEncodingCompressLevel0+this._compressionLevel),encs.push(encodings.pseudoEncodingDesktopSize),encs.push(encodings.pseudoEncodingLastRect),encs.push(encodings.pseudoEncodingQEMUExtendedKeyEvent),encs.push(encodings.pseudoEncodingExtendedDesktopSize),encs.push(encodings.pseudoEncodingXvp),encs.push(encodings.pseudoEncodingFence),encs.push(encodings.pseudoEncodingContinuousUpdates),encs.push(encodings.pseudoEncodingDesktopName),encs.push(encodings.pseudoEncodingExtendedClipboard),24==this._fbDepth&&(encs.push(encodings.pseudoEncodingVMwareCursor),encs.push(encodings.pseudoEncodingCursor)),RFB.messages.clientEncodings(this._sock,encs)}_initMsg(){switch(this._rfbInitState){case"ProtocolVersion":return this._negotiateProtocolVersion();case"Security":return this._negotiateSecurity();case"Authentication":return this._negotiateAuthentication();case"SecurityResult":return this._handleSecurityResult();case"SecurityReason":return this._handleSecurityReason();case"ClientInitialisation":return this._sock.send([this._shared?1:0]),this._rfbInitState="ServerInitialisation",!0;case"ServerInitialisation":return this._negotiateServerInit();default:return this._fail("Unknown init state (state: "+this._rfbInitState+")")}}_resumeAuthentication(){setTimeout(this._initMsg.bind(this),0)}_handleSetColourMapMsg(){return Log.Debug("SetColorMapEntries"),this._fail("Unexpected SetColorMapEntries message")}_handleServerCutText(){if(Log.Debug("ServerCutText"),this._sock.rQwait("ServerCutText header",7,1))return!1;this._sock.rQskipBytes(3);let length=this._sock.rQshift32();if(length=toSigned32bit(length),this._sock.rQwait("ServerCutText content",Math.abs(length),8))return!1;if(length>=0){const text=this._sock.rQshiftStr(length);if(this._viewOnly)return!0;this.dispatchEvent(new CustomEvent("clipboard",{detail:{text:text}}))}else{length=Math.abs(length);const flags=this._sock.rQshift32();let formats=65535&flags,actions=4278190080&flags,isCaps;if(!!(actions&1<<24)){this._clipboardServerCapabilitiesFormats={},this._clipboardServerCapabilitiesActions={};for(let i=0;i<=15;i++){let index=1<<i;formats&index&&(this._clipboardServerCapabilitiesFormats[index]=!0,this._sock.rQshift32())}for(let i=24;i<=31;i++){let index=1<<i;this._clipboardServerCapabilitiesActions[index]=!!(actions&index)}let clientActions=[1<<24,1<<25,1<<26,1<<27,1<<28];RFB.messages.extendedClipboardCaps(this._sock,clientActions,{extendedClipboardFormatText:0})}else if(actions===1<<25){if(this._viewOnly)return!0;null!=this._clipboardText&&this._clipboardServerCapabilitiesActions[1<<28]&&1&formats&&RFB.messages.extendedClipboardProvide(this._sock,[1],[this._clipboardText])}else if(actions===1<<26){if(this._viewOnly)return!0;this._clipboardServerCapabilitiesActions[1<<27]&&(null!=this._clipboardText?RFB.messages.extendedClipboardNotify(this._sock,[1]):RFB.messages.extendedClipboardNotify(this._sock,[]))}else if(actions===1<<27){if(this._viewOnly)return!0;this._clipboardServerCapabilitiesActions[1<<25]&&1&formats&&RFB.messages.extendedClipboardRequest(this._sock,[1])}else{if(actions!==1<<28)return this._fail("Unexpected action in extended clipboard message: "+actions);{if(this._viewOnly)return!0;if(!(1&formats))return!0;this._clipboardText=null;let zlibStream=this._sock.rQshiftBytes(length-4),streamInflator=new Inflator,textData=null;streamInflator.setInput(zlibStream);for(let i=0;i<=15;i++){let format=1<<i;if(formats&format){let size=0,sizeArray=streamInflator.inflate(4);size|=sizeArray[0]<<24,size|=sizeArray[1]<<16,size|=sizeArray[2]<<8,size|=sizeArray[3];let chunk=streamInflator.inflate(size);1===format&&(textData=chunk)}}if(streamInflator.setInput(null),null!==textData){let tmpText="";for(let i=0;i<textData.length;i++)tmpText+=String.fromCharCode(textData[i]);textData=tmpText,textData=decodeUTF8(textData),textData.length>0&&"\0"===textData.charAt(textData.length-1)&&(textData=textData.slice(0,-1)),textData=textData.replace("\r\n","\n"),this.dispatchEvent(new CustomEvent("clipboard",{detail:{text:textData}}))}}}}return!0}_handleServerFenceMsg(){if(this._sock.rQwait("ServerFence header",8,1))return!1;this._sock.rQskipBytes(3);let flags=this._sock.rQshift32(),length=this._sock.rQshift8();if(this._sock.rQwait("ServerFence payload",length,9))return!1;length>64&&(Log.Warn("Bad payload length ("+length+") in fence response"),length=64);const payload=this._sock.rQshiftStr(length);return this._supportsFence=!0,flags&1<<31?(flags&=3,RFB.messages.clientFence(this._sock,flags,payload),!0):this._fail("Unexpected fence response")}_handleXvpMsg(){if(this._sock.rQwait("XVP version and message",3,1))return!1;this._sock.rQskipBytes(1);const xvpVer=this._sock.rQshift8(),xvpMsg=this._sock.rQshift8();switch(xvpMsg){case 0:Log.Error("XVP Operation Failed");break;case 1:this._rfbXvpVer=xvpVer,Log.Info("XVP extensions enabled (version "+this._rfbXvpVer+")"),this._setCapability("power",!0);break;default:this._fail("Illegal server XVP message (msg: "+xvpMsg+")")}return!0}_normalMsg(){let msgType,first,ret;switch(msgType=this._FBU.rects>0?0:this._sock.rQshift8(),msgType){case 0:return ret=this._framebufferUpdate(),ret&&!this._enabledContinuousUpdates&&RFB.messages.fbUpdateRequest(this._sock,!0,0,0,this._fbWidth,this._fbHeight),ret;case 1:return this._handleSetColourMapMsg();case 2:return Log.Debug("Bell"),this.dispatchEvent(new CustomEvent("bell",{detail:{}})),!0;case 3:return this._handleServerCutText();case 150:return first=!this._supportsContinuousUpdates,this._supportsContinuousUpdates=!0,this._enabledContinuousUpdates=!1,first&&(this._enabledContinuousUpdates=!0,this._updateContinuousUpdates(),Log.Info("Enabling continuous updates.")),!0;case 248:return this._handleServerFenceMsg();case 250:return this._handleXvpMsg();default:return this._fail("Unexpected server message (type "+msgType+")"),Log.Debug("sock.rQslice(0, 30): "+this._sock.rQslice(0,30)),!0}}_onFlush(){this._flushing=!1,this._sock.rQlen>0&&this._handleMessage()}_framebufferUpdate(){if(0===this._FBU.rects){if(this._sock.rQwait("FBU header",3,1))return!1;if(this._sock.rQskipBytes(1),this._FBU.rects=this._sock.rQshift16(),this._display.pending())return this._flushing=!0,this._display.flush(),!1}for(;this._FBU.rects>0;){if(null===this._FBU.encoding){if(this._sock.rQwait("rect header",12))return!1;const hdr=this._sock.rQshiftBytes(12);this._FBU.x=(hdr[0]<<8)+hdr[1],this._FBU.y=(hdr[2]<<8)+hdr[3],this._FBU.width=(hdr[4]<<8)+hdr[5],this._FBU.height=(hdr[6]<<8)+hdr[7],this._FBU.encoding=parseInt((hdr[8]<<24)+(hdr[9]<<16)+(hdr[10]<<8)+hdr[11],10)}if(!this._handleRect())return!1;this._FBU.rects--,this._FBU.encoding=null}return this._display.flip(),!0}_handleRect(){switch(this._FBU.encoding){case encodings.pseudoEncodingLastRect:return this._FBU.rects=1,!0;case encodings.pseudoEncodingVMwareCursor:return this._handleVMwareCursor();case encodings.pseudoEncodingCursor:return this._handleCursor();case encodings.pseudoEncodingQEMUExtendedKeyEvent:return this._qemuExtKeyEventSupported=!0,!0;case encodings.pseudoEncodingDesktopName:return this._handleDesktopName();case encodings.pseudoEncodingDesktopSize:return this._resize(this._FBU.width,this._FBU.height),!0;case encodings.pseudoEncodingExtendedDesktopSize:return this._handleExtendedDesktopSize();default:return this._handleDataRect()}}_handleVMwareCursor(){const hotx=this._FBU.x,hoty=this._FBU.y,w=this._FBU.width,h=this._FBU.height;if(this._sock.rQwait("VMware cursor encoding",1))return!1;const cursorType=this._sock.rQshift8();let rgba;this._sock.rQshift8();const bytesPerPixel=4;if(0==cursorType){const PIXEL_MASK=-256;if(rgba=new Array(w*h*4),this._sock.rQwait("VMware cursor classic encoding",w*h*4*2,2))return!1;let andMask=new Array(w*h);for(let pixel=0;pixel<w*h;pixel++)andMask[pixel]=this._sock.rQshift32();let xorMask=new Array(w*h);for(let pixel=0;pixel<w*h;pixel++)xorMask[pixel]=this._sock.rQshift32();for(let pixel=0;pixel<w*h;pixel++)if(0==andMask[pixel]){let bgr=xorMask[pixel],r=bgr>>8&255,g=bgr>>16&255,b=bgr>>24&255;rgba[4*pixel]=r,rgba[4*pixel+1]=g,rgba[4*pixel+2]=b,rgba[4*pixel+3]=255}else(andMask[pixel]&PIXEL_MASK)==PIXEL_MASK?0==xorMask[pixel]?(rgba[4*pixel]=0,rgba[4*pixel+1]=0,rgba[4*pixel+2]=0,rgba[4*pixel+3]=0):(xorMask[pixel],rgba[4*pixel]=0,rgba[4*pixel+1]=0,rgba[4*pixel+2]=0,rgba[4*pixel+3]=255):(rgba[4*pixel]=0,rgba[4*pixel+1]=0,rgba[4*pixel+2]=0,rgba[4*pixel+3]=255)}else{if(1!=cursorType)return Log.Warn("The given cursor type is not supported: "+cursorType+" given."),!1;if(this._sock.rQwait("VMware cursor alpha encoding",w*h*4,2))return!1;rgba=new Array(w*h*4);for(let pixel=0;pixel<w*h;pixel++){let data=this._sock.rQshift32();rgba[4*pixel]=data>>24&255,rgba[4*pixel+1]=data>>16&255,rgba[4*pixel+2]=data>>8&255,rgba[4*pixel+3]=255&data}}return this._updateCursor(rgba,hotx,hoty,w,h),!0}_handleCursor(){const hotx=this._FBU.x,hoty=this._FBU.y,w=this._FBU.width,h=this._FBU.height,pixelslength=w*h*4,masklength=Math.ceil(w/8)*h;let bytes=pixelslength+masklength;if(this._sock.rQwait("cursor encoding",bytes))return!1;const pixels=this._sock.rQshiftBytes(pixelslength),mask=this._sock.rQshiftBytes(masklength);let rgba=new Uint8Array(w*h*4),pixIdx=0;for(let y=0;y<h;y++)for(let x=0;x<w;x++){let maskIdx,alpha=mask[y*Math.ceil(w/8)+Math.floor(x/8)]<<x%8&128?255:0;rgba[pixIdx]=pixels[pixIdx+2],rgba[pixIdx+1]=pixels[pixIdx+1],rgba[pixIdx+2]=pixels[pixIdx],rgba[pixIdx+3]=alpha,pixIdx+=4}return this._updateCursor(rgba,hotx,hoty,w,h),!0}_handleDesktopName(){if(this._sock.rQwait("DesktopName",4))return!1;let length=this._sock.rQshift32();if(this._sock.rQwait("DesktopName",length,4))return!1;let name=this._sock.rQshiftStr(length);return name=decodeUTF8(name,!0),this._setDesktopName(name),!0}_handleExtendedDesktopSize(){if(this._sock.rQwait("ExtendedDesktopSize",4))return!1;const numberOfScreens=this._sock.rQpeek8();let bytes=4+16*numberOfScreens;if(this._sock.rQwait("ExtendedDesktopSize",bytes))return!1;const firstUpdate=!this._supportsSetDesktopSize;this._supportsSetDesktopSize=!0,firstUpdate&&this._requestRemoteResize(),this._sock.rQskipBytes(1),this._sock.rQskipBytes(3);for(let i=0;i<numberOfScreens;i+=1)0===i?(this._screenID=this._sock.rQshiftBytes(4),this._sock.rQskipBytes(2),this._sock.rQskipBytes(2),this._sock.rQskipBytes(2),this._sock.rQskipBytes(2),this._screenFlags=this._sock.rQshiftBytes(4)):this._sock.rQskipBytes(16);if(1===this._FBU.x&&0!==this._FBU.y){let msg="";switch(this._FBU.y){case 1:msg="Resize is administratively prohibited";break;case 2:msg="Out of resources";break;case 3:msg="Invalid screen layout";break;default:msg="Unknown reason"}Log.Warn("Server did not accept the resize request: "+msg)}else this._resize(this._FBU.width,this._FBU.height);return!0}_handleDataRect(){let decoder=this._decoders[this._FBU.encoding];if(!decoder)return this._fail("Unsupported encoding (encoding: "+this._FBU.encoding+")"),!1;try{return decoder.decodeRect(this._FBU.x,this._FBU.y,this._FBU.width,this._FBU.height,this._sock,this._display,this._fbDepth)}catch(err){return this._fail("Error decoding rect: "+err),!1}}_updateContinuousUpdates(){this._enabledContinuousUpdates&&RFB.messages.enableContinuousUpdates(this._sock,!0,0,0,this._fbWidth,this._fbHeight)}_resize(width,height){this._fbWidth=width,this._fbHeight=height,this._display.resize(this._fbWidth,this._fbHeight),this._updateClip(),this._updateScale(),this._updateContinuousUpdates(),this._saveExpectedClientSize()}_xvpOp(ver,op){this._rfbXvpVer<ver||(Log.Info("Sending XVP operation "+op+" (version "+ver+")"),RFB.messages.xvpOp(this._sock,ver,op))}_updateCursor(rgba,hotx,hoty,w,h){this._cursorImage={rgbaPixels:rgba,hotx:hotx,hoty:hoty,w:w,h:h},this._refreshCursor()}_shouldShowDotCursor(){if(!this._showDotCursor)return!1;for(let i=3;i<this._cursorImage.rgbaPixels.length;i+=4)if(this._cursorImage.rgbaPixels[i])return!1;return!0}_refreshCursor(){if("connecting"!==this._rfbConnectionState&&"connected"!==this._rfbConnectionState)return;const image=this._shouldShowDotCursor()?RFB.cursors.dot:this._cursorImage;this._cursor.change(image.rgbaPixels,image.hotx,image.hoty,image.w,image.h)}static genDES(password,challenge){const passwordChars=password.split("").map(c=>c.charCodeAt(0));return new DES(passwordChars).encrypt(challenge)}}RFB.messages={keyEvent(sock,keysym,down){const buff=sock._sQ,offset=sock._sQlen;buff[offset]=4,buff[offset+1]=down,buff[offset+2]=0,buff[offset+3]=0,buff[offset+4]=keysym>>24,buff[offset+5]=keysym>>16,buff[offset+6]=keysym>>8,buff[offset+7]=keysym,sock._sQlen+=8,sock.flush()},QEMUExtendedKeyEvent(sock,keysym,down,keycode){function getRFBkeycode(xtScanCode){const upperByte=keycode>>8,lowerByte=255&keycode;return 224===upperByte&&lowerByte<127?128|lowerByte:xtScanCode}const buff=sock._sQ,offset=sock._sQlen;buff[offset]=255,buff[offset+1]=0,buff[offset+2]=down>>8,buff[offset+3]=down,buff[offset+4]=keysym>>24,buff[offset+5]=keysym>>16,buff[offset+6]=keysym>>8,buff[offset+7]=keysym;const RFBkeycode=getRFBkeycode(keycode);buff[offset+8]=RFBkeycode>>24,buff[offset+9]=RFBkeycode>>16,buff[offset+10]=RFBkeycode>>8,buff[offset+11]=RFBkeycode,sock._sQlen+=12,sock.flush()},pointerEvent(sock,x,y,mask){const buff=sock._sQ,offset=sock._sQlen;buff[offset]=5,buff[offset+1]=mask,buff[offset+2]=x>>8,buff[offset+3]=x,buff[offset+4]=y>>8,buff[offset+5]=y,sock._sQlen+=6,sock.flush()},_buildExtendedClipboardFlags(actions,formats){let data=new Uint8Array(4),formatFlag=0,actionFlag=0;for(let i=0;i<actions.length;i++)actionFlag|=actions[i];for(let i=0;i<formats.length;i++)formatFlag|=formats[i];return data[0]=actionFlag>>24,data[1]=0,data[2]=0,data[3]=formatFlag,data},extendedClipboardProvide(sock,formats,inData){let deflator=new Deflator,dataToDeflate=[];for(let i=0;i<formats.length;i++){if(1!=formats[i])throw new Error("Unsupported extended clipboard format for Provide message.");inData[i]=inData[i].replace(/\r\n|\r|\n/gm,"\r\n");let text=encodeUTF8(inData[i]+"\0");dataToDeflate.push(text.length>>24&255,text.length>>16&255,text.length>>8&255,255&text.length);for(let j=0;j<text.length;j++)dataToDeflate.push(text.charCodeAt(j))}let deflatedData=deflator.deflate(new Uint8Array(dataToDeflate)),data=new Uint8Array(4+deflatedData.length);data.set(RFB.messages._buildExtendedClipboardFlags([1<<28],formats)),data.set(deflatedData,4),RFB.messages.clientCutText(sock,data,!0)},extendedClipboardNotify(sock,formats){let flags=RFB.messages._buildExtendedClipboardFlags([1<<27],formats);RFB.messages.clientCutText(sock,flags,!0)},extendedClipboardRequest(sock,formats){let flags=RFB.messages._buildExtendedClipboardFlags([1<<25],formats);RFB.messages.clientCutText(sock,flags,!0)},extendedClipboardCaps(sock,actions,formats){let formatKeys=Object.keys(formats),data=new Uint8Array(4+4*formatKeys.length);formatKeys.map(x=>parseInt(x)),formatKeys.sort((a,b)=>a-b),data.set(RFB.messages._buildExtendedClipboardFlags(actions,[]));let loopOffset=4;for(let i=0;i<formatKeys.length;i++)data[loopOffset]=formats[formatKeys[i]]>>24,data[loopOffset+1]=formats[formatKeys[i]]>>16,data[loopOffset+2]=formats[formatKeys[i]]>>8,data[loopOffset+3]=formats[formatKeys[i]]>>0,loopOffset+=4,data[3]|=1<<formatKeys[i];RFB.messages.clientCutText(sock,data,!0)},clientCutText(sock,data,extended=!1){const buff=sock._sQ,offset=sock._sQlen;let length;buff[offset]=6,buff[offset+1]=0,buff[offset+2]=0,buff[offset+3]=0,length=extended?toUnsigned32bit(-data.length):data.length,buff[offset+4]=length>>24,buff[offset+5]=length>>16,buff[offset+6]=length>>8,buff[offset+7]=length,sock._sQlen+=8;let dataOffset=0,remaining=data.length;for(;remaining>0;){let flushSize=Math.min(remaining,sock._sQbufferSize-sock._sQlen);for(let i=0;i<flushSize;i++)buff[sock._sQlen+i]=data[dataOffset+i];sock._sQlen+=flushSize,sock.flush(),remaining-=flushSize,dataOffset+=flushSize}},setDesktopSize(sock,width,height,id,flags){const buff=sock._sQ,offset=sock._sQlen;buff[offset]=251,buff[offset+1]=0,buff[offset+2]=width>>8,buff[offset+3]=width,buff[offset+4]=height>>8,buff[offset+5]=height,buff[offset+6]=1,buff[offset+7]=0,buff[offset+8]=id>>24,buff[offset+9]=id>>16,buff[offset+10]=id>>8,buff[offset+11]=id,buff[offset+12]=0,buff[offset+13]=0,buff[offset+14]=0,buff[offset+15]=0,buff[offset+16]=width>>8,buff[offset+17]=width,buff[offset+18]=height>>8,buff[offset+19]=height,buff[offset+20]=flags>>24,buff[offset+21]=flags>>16,buff[offset+22]=flags>>8,buff[offset+23]=flags,sock._sQlen+=24,sock.flush()},clientFence(sock,flags,payload){const buff=sock._sQ,offset=sock._sQlen;buff[offset]=248,buff[offset+1]=0,buff[offset+2]=0,buff[offset+3]=0,buff[offset+4]=flags>>24,buff[offset+5]=flags>>16,buff[offset+6]=flags>>8,buff[offset+7]=flags;const n=payload.length;buff[offset+8]=n;for(let i=0;i<n;i++)buff[offset+9+i]=payload.charCodeAt(i);sock._sQlen+=9+n,sock.flush()},enableContinuousUpdates(sock,enable,x,y,width,height){const buff=sock._sQ,offset=sock._sQlen;buff[offset]=150,buff[offset+1]=enable,buff[offset+2]=x>>8,buff[offset+3]=x,buff[offset+4]=y>>8,buff[offset+5]=y,buff[offset+6]=width>>8,buff[offset+7]=width,buff[offset+8]=height>>8,buff[offset+9]=height,sock._sQlen+=10,sock.flush()},pixelFormat(sock,depth,trueColor){const buff=sock._sQ,offset=sock._sQlen;let bpp;bpp=depth>16?32:depth>8?16:8;const bits=Math.floor(depth/3);buff[offset]=0,buff[offset+1]=0,buff[offset+2]=0,buff[offset+3]=0,buff[offset+4]=bpp,buff[offset+5]=depth,buff[offset+6]=0,buff[offset+7]=trueColor?1:0,buff[offset+8]=0,buff[offset+9]=(1<<bits)-1,buff[offset+10]=0,buff[offset+11]=(1<<bits)-1,buff[offset+12]=0,buff[offset+13]=(1<<bits)-1,buff[offset+14]=0*bits,buff[offset+15]=1*bits,buff[offset+16]=2*bits,buff[offset+17]=0,buff[offset+18]=0,buff[offset+19]=0,sock._sQlen+=20,sock.flush()},clientEncodings(sock,encodings){const buff=sock._sQ,offset=sock._sQlen;buff[offset]=2,buff[offset+1]=0,buff[offset+2]=encodings.length>>8,buff[offset+3]=encodings.length;let j=offset+4;for(let i=0;i<encodings.length;i++){const enc=encodings[i];buff[j]=enc>>24,buff[j+1]=enc>>16,buff[j+2]=enc>>8,buff[j+3]=enc,j+=4}sock._sQlen+=j-offset,sock.flush()},fbUpdateRequest(sock,incremental,x,y,w,h){const buff=sock._sQ,offset=sock._sQlen;void 0===x&&(x=0),void 0===y&&(y=0),buff[offset]=3,buff[offset+1]=incremental?1:0,buff[offset+2]=x>>8&255,buff[offset+3]=255&x,buff[offset+4]=y>>8&255,buff[offset+5]=255&y,buff[offset+6]=w>>8&255,buff[offset+7]=255&w,buff[offset+8]=h>>8&255,buff[offset+9]=255&h,sock._sQlen+=10,sock.flush()},xvpOp(sock,ver,op){const buff=sock._sQ,offset=sock._sQlen;buff[offset]=250,buff[offset+1]=0,buff[offset+2]=ver,buff[offset+3]=op,sock._sQlen+=4,sock.flush()}},RFB.cursors={none:{rgbaPixels:new Uint8Array,w:0,h:0,hotx:0,hoty:0},dot:{rgbaPixels:new Uint8Array([255,255,255,255,0,0,0,255,255,255,255,255,0,0,0,255,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,255,255,255,255,255]),w:3,h:3,hotx:1,hoty:1}};